<body onload="GetArduinoInputs();">

<canvas id="canvas-id"></canvas>

<script>

var gauge = new RadialGauge({
    renderTo: 'canvas-id',
    minValue: 0,
    maxValue: 360,
    majorTicks: [
        "0",
        "45",
        "90",
        "135",
        "180",
        "225",
        "270",
        "315",
        ""
    ],
    minorTicks: 5,
    ticksAngle: 360,
    startAngle: 180,
    strokeTicks: false,
    highlights: false,
    colorPlate: "#222",
    colorMajorTicks: "#f5f5f5",
    colorMinorTicks: "#ddd",
    colorNumbers: "#ccc",
    colorNeedle: "rgba(240, 128, 128, 1)",
    colorNeedleEnd: "rgba(255, 160, 122, .9)",
    valueBox: false,
    valueTextShadow: false,
    colorCircleInner: "#fff",
    colorNeedleCircleOuter: "#ccc",
    needleCircleSize: 15,
    needleCircleOuter: false,
    animationRule: "linear",
    needleType: "line",
    needleStart: 75,
    needleEnd: 99,
    needleWidth: 3,
    borders: true,
    borderInnerWidth: 0,
    borderMiddleWidth: 0,
    borderOuterWidth: 10,
    colorBorderOuter: "#ccc",
    colorBorderOuterEnd: "#ccc",
    colorNeedleShadowDown: "#222",
    borderShadowWidth: 0,
    animationDuration: 1500,
    width: 300,
    height: 300
}).draw();        

      
    
function GetArduinoInputs()
{       
    nocache = "&nocache=" + Math.random() * 1000000;
    var request = new XMLHttpRequest();
    request.onreadystatechange = function()
    {
        if (this.readyState == 4) {
            if (this.status == 200) {
                if (this.responseXML != null) {                            
                    data_val = this.responseXML.getElementsByTagName('analog')[0].childNodes[0].nodeValue;                    
                }
            }
        }
    }
    request.open("GET", "ajax_inputs" + nocache, true);
    request.send(null);           
    setTimeout('GetArduinoInputs()', 500);                

    if (typeof(data_val) !== 'undefined' && data_val >= 0) {    
       gauge.value = data_val;
       gauge.update();
    }    
}      

function lightCheck(param){
   if (param == 'left'){
      document.getElementById("btn_1").classList.remove('btn');
      document.getElementById("btn_1").classList.add('active');
      
      document.getElementById("btn_2").classList.remove('active');
      document.getElementById("btn_2").classList.add('btn');
      
      document.getElementById("btn_3").classList.remove('active');
      document.getElementById("btn_3").classList.add('btn');      
   }
   
   if (param == 'stop'){
      document.getElementById("btn_1").classList.remove('active');
      document.getElementById("btn_1").classList.add('btn');
      
      document.getElementById("btn_2").classList.remove('btn');
      document.getElementById("btn_2").classList.add('active');
      
      document.getElementById("btn_3").classList.remove('active');
      document.getElementById("btn_3").classList.add('btn');      
   }
   
   if (param == 'right'){
      document.getElementById("btn_1").classList.remove('active');
      document.getElementById("btn_1").classList.add('btn');
      
      document.getElementById("btn_2").classList.remove('active');
      document.getElementById("btn_2").classList.add('btn');
      
      document.getElementById("btn_3").classList.remove('btn');
      document.getElementById("btn_3").classList.add('active');      
   }
}
   
    
</script>
</body>
</html>
